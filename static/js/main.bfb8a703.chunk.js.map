{"version":3,"sources":["components/atoms/Link.tsx","components/pages/Top.tsx","components/pages/NotFound.tsx","containers/interactive/Effects.tsx","containers/interactive/InteractiveCubesOrtho.tsx","containers/interactive/InteractiveTextsOrtho.tsx","hooks/useCannon.tsx","components/Text.tsx","components/Plane.tsx","containers/gravity/TextWork01.tsx","containers/montage/Montage.tsx","constants/Route.ts","containers/geometry/TexturedBox.tsx","components/organisms/Sidebar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["StyleATagLink","styled","a","ATagLink","props","href","path","target","rel","pathName","Wrapper","div","H1","h1","Body","Text","p","Top","rest","NotFound","extend","EffectComposer","ShaderPass","RenderPass","SSAOPass","UnrealBloomPass","Effects","composer","useRef","useThree","scene","gl","size","camera","aspect","useMemo","THREE","width","height","useEffect","current","setSize","useFrame","render","ref","args","attachArray","FXAAShader","material-uniforms-resolution-value","renderToScreen","InstancedMesh","tempObject","tempColor","colors","Array","fill","undefined","map","niceColors","Math","floor","random","Boxes","useState","hovered","set","colorArray","Float32Array","from","flatMap","_","i","toArray","previous","state","time","clock","getElapsedTime","rotation","x","sin","y","z","id","position","geometry","attributes","color","needsUpdate","scale","updateMatrix","setMatrixAt","matrix","instanceMatrix","onPointerMove","e","instanceId","onPointerOut","attach","attachObject","vertexColors","theme","css","Letters","font","parse","helvetikerRegularFont","config","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","LETTER_BOX_WIDTH","pow","text","context","React","createContext","Provider","CANNON","world","broadphase","solver","iterations","gravity","useRender","step","value","children","useCannon","fn","deps","useContext","body","addBody","removeBody","copy","quaternion","TextWithCannon","vAlign","hAlign","cannon","mass","addShape","mesh","useUpdate","self","computeBoundingBox","boundingBox","getSize","Plane","receiveShadow","CanvasWork","intensity","fallback","textObjects","xPos","key","require","useSprings","number","length","r","round","degToRad","data","str","Content","textConfig","tension","friction","springs","setInterval","delay","Fragment","d","index","castShadow","meshStandardMaterial","roughness","metalness","Lights","angle","PI","penumbra","shadow-mapSize-width","shadow-mapSize-height","ROUTES","exact","gnavi","title","category","component","alpha","near","far","onCreated","setClearColor","setText","openCanvas","el","document","getElementsByTagName","console","info","addEventListener","onClick","shadowMap","fov","setTextObjects","type","onChange","currentTarget","slice","Cube","useLoader","TexturedBox","TitleArea","LogoLink","Link","Title","Navi","nav","List","ul","Item","li","SidebarLink","active","Sidebar","location","useLocation","to","filter","route","pathname","indexOf","globalStyles","emotionReset","App","styles","Container","Main","main","Boolean","window","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bfb8a703.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst StyleATagLink = styled.a`\n  color: #01baa5;\n  text-decoration: underline;\n`\nexport const ATagLink = (props: {path: string, pathName: string}) => {\n  return (\n    <StyleATagLink href={props.path} target=\"_blank\" rel=\"noopener noreferrer\">\n      {props.pathName}\n    </StyleATagLink>\n  )\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { ATagLink } from 'components/atoms/Link';\n\nconst Top: React.FC = (props) => {\n  const { ...rest } = props;\n  return (\n    <Wrapper {...rest}>\n      <H1>Threejs Works</H1>\n      <Body>\n        <Text>\n          {`Based on `}\n          <ATagLink\n            path=\"https://github.com/react-spring/react-three-fiber#readme\"\n            pathName=\"react-three-fiber\"\n          />\n        </Text>\n      </Body>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  margin: 30px;\n`;\n\nconst H1 = styled.h1`\n  font-size: 2.4rem;\n`;\n\nconst Body = styled.div`\n  margin-top: 40px;\n`\n\nconst Text = styled.p`\n`\n\nexport default Top;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst NotFound: React.FC = (props) => {\n  const { ...rest } = props;\n  return <Wrapper {...rest}>Not Found</Wrapper>;\n};\n\nconst Wrapper = styled.div``;\n\nexport default NotFound;\n","import * as THREE from 'three'\nimport React, { useRef, useEffect, useMemo } from 'react'\nimport { extend, useThree, useFrame, ReactThreeFiber } from 'react-three-fiber'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\nimport { SSAOPass } from 'three/examples/jsm/postprocessing/SSAOPass'\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass'\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader'\n\nextend({ EffectComposer, ShaderPass, RenderPass, SSAOPass, UnrealBloomPass })\n\n// インターフェイスIntrinsicElementsにorbitControls の定義を追加\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace JSX {\n    interface IntrinsicElements {\n      effectComposer: ReactThreeFiber.Node<EffectComposer, typeof EffectComposer>\n      renderPass: ReactThreeFiber.Node<RenderPass, typeof RenderPass>\n      sSAOPass: ReactThreeFiber.Node<SSAOPass, typeof SSAOPass>\n      unrealBloomPass: ReactThreeFiber.Node<UnrealBloomPass, typeof UnrealBloomPass>\n      shaderPass: ReactThreeFiber.Node<ShaderPass, typeof ShaderPass>\n    }\n  }\n}\n\nexport const Effects = () => {\n  const composer = useRef<any>()\n  const { scene, gl, size, camera } = useThree()\n  const aspect = useMemo(() => new THREE.Vector2(size.width, size.height), [size])\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size])\n  useFrame(() => composer.current.render(), 2)\n  return (\n    <effectComposer ref={composer} args={[gl]}>\n      <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\n      {/* remove because can't move other path */}\n      {/* <sSAOPass attachArray=\"passes\" args={[scene, camera]} kernelRadius={0.6 as any} maxDistance={0.03} /> */}\n      <unrealBloomPass attachArray=\"passes\" args={[aspect, 2, 1, 0.991]} />\n      <shaderPass\n        attachArray=\"passes\"\n        args={[FXAAShader]}\n        material-uniforms-resolution-value={[1 / size.width, 1 / size.height]}\n        renderToScreen\n      />\n    </effectComposer>\n  )\n}\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport * as THREE from 'three'\nimport React, { useRef, useMemo, useState, useEffect } from 'react'\nimport { Canvas, useFrame, extend, ReactThreeFiber } from 'react-three-fiber'\nimport niceColors from 'nice-color-palettes'\nimport { Effects } from './Effects'\nimport { InstancedMesh } from 'three/src/objects/InstancedMesh'\nimport { InstancedBufferAttribute } from 'three/src/core/InstancedBufferAttribute'\n\nextend({ InstancedMesh })\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace JSX {\n    interface IntrinsicElements {\n      instancedMesh: ReactThreeFiber.Node<InstancedMesh & {\n        onPointerMove: any\n        onPointerOut: any\n      }, typeof InstancedMesh>\n      instancedBufferAttribute: ReactThreeFiber.Node<InstancedBufferAttribute, typeof InstancedBufferAttribute>\n    }\n  }\n}\n\nconst tempObject = new THREE.Object3D()\nconst tempColor = new THREE.Color()\n// カラーパレットからカラーコード配列を作成する\nconst colors = new Array(1000).fill(undefined).map(() => niceColors[17][Math.floor(Math.random() * 5)])\n\nconst Boxes = () => {\n  const [hovered, set] = useState()\n  // \n  const colorArray = useMemo(() => Float32Array.from(\n    new Array(1000).fill(undefined).flatMap((_, i) => tempColor.set(colors[i]).toArray())\n    ), [])\n\n  const ref = useRef<any>()\n  const previous = useRef<any>()\n  useEffect(() => void (previous.current = hovered), [hovered])\n\n  useFrame(state => {\n    const time = state.clock.getElapsedTime()\n    ref.current.rotation.x = Math.sin(time / 4)\n    ref.current.rotation.y = Math.sin(time / 2)\n    let i = 0\n    for (let x = 0; x < 10; x++)\n      for (let y = 0; y < 10; y++)\n        for (let z = 0; z < 10; z++) {\n          const id = i++\n          tempObject.position.set(5 - x, 5 - y, 5 - z)\n          // Boxの位置によって回転量を変えるための処理\n          tempObject.rotation.y = Math.sin(x / 4 + time) + Math.sin(y / 4 + time) + Math.sin(z / 4 + time)\n          tempObject.rotation.z = tempObject.rotation.y * 2\n          if (hovered !== previous.current) {\n            tempColor.set(id === hovered ? 'white' : colors[id]).toArray(colorArray, id * 3)\n            ref.current.geometry.attributes.color.needsUpdate = true\n          }\n          const scale = id === hovered ? 2 : 1\n          tempObject.scale.set(scale, scale, scale)\n          tempObject.updateMatrix()\n          ref.current.setMatrixAt(id, tempObject.matrix)\n        }\n    ref.current.instanceMatrix.needsUpdate = true\n  })\n\n  return (\n    // instanceを1000個用意する\n    // argsは `mesh = new THREE.InstancedMesh( geometry, material, count )` にあたる。ref: https://github.com/mrdoob/three.js/blob/master/examples/webgl_instancing_dynamic.html\n    <instancedMesh ref={ref} args={[null as any, null as any, 1000]} onPointerMove={(e: any) => set(e.instanceId)} onPointerOut={(e: any) => set(undefined)}>\n      <boxBufferGeometry attach=\"geometry\" args={[0.7, 0.7, 0.7]}>\n        {/* 1000個のboxBufferGeometryの差分を出すためのもの */}\n        <instancedBufferAttribute attachObject={['attributes', 'color']} args={[colorArray, 3]} />\n      </boxBufferGeometry>\n      <meshPhongMaterial attach=\"material\" vertexColors={THREE.VertexColors} />\n    </instancedMesh>\n  )\n}\n\nconst theme = css`\n  width: 100%;\n  height: 100vh;\n  background-color: #272727;\n`;\n\nexport const InteractiveCubesOrtho = () => {\n  return(\n    <div css={theme}>\n      <Canvas\n        gl={new THREE.WebGLRenderer({alpha: false})}\n        camera={{ position: [0, 0, 15], near: 5, far: 20 }}\n        onCreated={({ gl }) => gl.setClearColor('skyblue')}\n      >\n        <ambientLight />\n        <pointLight position={[150, 150, 150]} intensity={0.55} />\n        <Boxes />\n        <Effects />\n      </Canvas>\n    </div>\n  )\n}\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport * as THREE from 'three'\nimport React, { useRef, useMemo, useState, useEffect } from 'react'\nimport { Canvas, useFrame, extend, ReactThreeFiber } from 'react-three-fiber'\nimport niceColors from 'nice-color-palettes'\nimport { Effects } from './Effects'\nimport { InstancedMesh } from 'three/src/objects/InstancedMesh'\nimport { InstancedBufferAttribute } from 'three/src/core/InstancedBufferAttribute'\nimport helvetikerRegularFont from 'three/examples/fonts/helvetiker_regular.typeface.json'\n\nextend({ InstancedMesh })\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-namespace\n  namespace JSX {\n    interface IntrinsicElements {\n      instancedMesh: ReactThreeFiber.Node<InstancedMesh & {\n        onPointerMove: any\n        onPointerOut: any\n      }, typeof InstancedMesh>\n      instancedBufferAttribute: ReactThreeFiber.Node<InstancedBufferAttribute, typeof InstancedBufferAttribute>\n    }\n  }\n}\n\nconst tempObject = new THREE.Object3D()\nconst tempColor = new THREE.Color()\n// カラーパレットからカラーコード配列を作成する\nconst colors = new Array(1000).fill(undefined).map(() => niceColors[3][Math.floor(Math.random() * 5)])\n\nconst LETTER_BOX_WIDTH = 4\nconst FONT_SIZE = 100\n\ntype LettersProps = {\n  text: string\n}\nconst Letters: React.FC<LettersProps> = (props) => {\n\n  const colorArray = useMemo(() => Float32Array.from(\n    new Array(1000).fill(undefined).flatMap((_, i) => tempColor.set(colors[i]).toArray())\n    ), [])\n  \n  const font = new THREE.FontLoader().parse(helvetikerRegularFont);\n  const config = useMemo(\n    () => ({ font, size: FONT_SIZE, height: 1, curveSegments: 32, bevelEnabled: true, bevelThickness: 6, bevelSize: 2.5, bevelOffset: 0, bevelSegments: 8 }),\n    [font]\n  )\n\n  const ref = useRef<any>()\n\n  useFrame(state => {\n    const time = state.clock.getElapsedTime()\n    ref.current.rotation.x = Math.sin(time / 4)\n    ref.current.rotation.y = Math.sin(time / 2)\n    let i = 0\n    for (let x = 0; x < LETTER_BOX_WIDTH; x++)\n      for (let y = 0; y < LETTER_BOX_WIDTH; y++)\n        for (let z = 0; z < LETTER_BOX_WIDTH; z++) {\n          const id = i++\n          tempObject.position.set(\n            LETTER_BOX_WIDTH/2 * FONT_SIZE - FONT_SIZE * x,\n            LETTER_BOX_WIDTH/2 * FONT_SIZE - FONT_SIZE * y,\n            LETTER_BOX_WIDTH/2 * FONT_SIZE - FONT_SIZE * z\n          )\n          // Boxの位置によって回転量を変えるための処理\n          tempObject.rotation.y = Math.sin(x / 4 + time) + Math.sin(y / 4 + time) + Math.sin(z / 4 + time)\n          tempObject.rotation.z = tempObject.rotation.y * 2\n          const scale = 1\n          tempObject.scale.set(scale, scale, scale)\n          tempObject.updateMatrix()\n          ref.current.setMatrixAt(id, tempObject.matrix)\n        }\n    ref.current.instanceMatrix.needsUpdate = true\n  })\n\n  return (\n    <instancedMesh ref={ref} args={[null as any, null as any, Math.pow(LETTER_BOX_WIDTH, 2)]}>\n      <textBufferGeometry attach=\"geometry\" args={[props.text, config]}>\n        <instancedBufferAttribute attachObject={['attributes', 'color']} args={[colorArray, 3]} />\n      </textBufferGeometry>\n      {/* <meshNormalMaterial attach=\"material\" /> */}\n      {/* なぜかscroll, resizeするとライトがなくなる → header無くしてスクロールできないようにした */}\n      <meshPhongMaterial attach=\"material\" vertexColors={THREE.VertexColors} />\n    </instancedMesh>\n  )\n}\n\nconst theme = css`\n  width: 100%;\n  height: 100vh;\n  background-color: #272727;\n`;\n\nexport const InteractiveTextsOrtho: React.FC = () => {\n\n  const [text, setText] = useState<string>('hello,world!'[Math.floor(Math.random()*5)])\n  const [openCanvas, setOpenCanvas] = useState<boolean>(true)\n\n  useEffect(() => {\n    var el = document.getElementsByTagName(\"canvas\")[0];\n    console.info(el)\n    el.addEventListener(\"touchstart\", () => setText('hello,world!'[Math.floor(Math.random()*5)]), false);\n  }, [])\n\n  return(\n    <div css={theme}>\n      {\n        openCanvas\n          ? <Canvas\n              id=\"canvas\"\n              gl={new THREE.WebGLRenderer({alpha: false})}\n              camera={{ position: [0, 0, 700], near: 5, far: 1400 }}\n              onCreated={({ gl }) => gl.setClearColor('skyblue')}\n              onClick={() => setText('hello,world!'[Math.floor(Math.random()*5)])}\n            >\n              <ambientLight />\n              <pointLight position={[150, 150, 150]} intensity={0.55} />\n              <Letters text={text} />\n              <Effects />\n            </Canvas>\n          : <div>\n\n            </div>\n      }\n    </div>\n  )\n}\n","import * as CANNON from 'cannon'\nimport React, { useState, useEffect, useContext, useRef } from 'react'\nimport { useRender } from 'react-three-fiber'\n\n// Cannon-world context provider\nconst context = (React as any).createContext()\nexport function Provider(props: any) {\n  // Set up physics\n  const [world] = useState(() => new CANNON.World())\n  useEffect(() => {\n    world.broadphase = new CANNON.NaiveBroadphase()\n    world.solver.iterations = 10\n    world.gravity.set(0, 0, -100)\n  }, [world])\n\n  // Run world stepper every frame\n  useRender(() => world.step(1 / 60), false)\n  // Distribute world via context\n  return <context.Provider value={world} children={props.children} />\n}\n\n// Custom hook to maintain a world physics body\nexport function useCannon({ ...props }, fn: any, deps = []) {\n  const ref: any = useRef()\n  // Get cannon world object\n  const world: any = useContext(context)\n  // Instanciate a physics body\n  const [body] = useState(() => new CANNON.Body(props))\n  useEffect(() => {\n    // Call function so the user can add shapes\n    fn(body)\n    // Add body to world on mount\n    world.addBody(body)\n    // Remove body on unmount\n    return () => world.removeBody(body)\n  }, deps)\n\n  useRender(() => {\n    if (ref.current) {\n      // Transport cannon physics into the referenced threejs object\n      ref.current.position.copy(body.position)\n      ref.current.quaternion.copy(body.quaternion)\n    }\n  }, false)\n\n  return ref\n}","import * as THREE from 'three'\nimport React, { useMemo } from 'react'\nimport { useLoader, useUpdate } from 'react-three-fiber'\nimport helvetikerRegularFont from 'three/examples/fonts/helvetiker_regular.typeface.json'\nimport * as CANNON from 'cannon';\nimport { useCannon } from 'hooks/useCannon';\n\nexport default function({ children, vAlign = 'center', hAlign = 'center', size = 1, color = '#000000', ...props }: any) {\n  const font = new THREE.FontLoader().parse(helvetikerRegularFont);\n  const config = useMemo(\n    () => ({ font, size: 40, height: 30, curveSegments: 32, bevelEnabled: true, bevelThickness: 6, bevelSize: 2.5, bevelOffset: 0, bevelSegments: 8 }),\n    [font]\n  )\n  const mesh = useUpdate(\n    (self: any) => {\n      const size = new THREE.Vector3()\n      self.geometry.computeBoundingBox()\n      self.geometry.boundingBox.getSize(size)\n      self.position.x = hAlign === 'center' ? -size.x / 2 : hAlign === 'right' ? 0 : -size.x\n      self.position.y = vAlign === 'center' ? -size.y / 2 : vAlign === 'top' ? 0 : -size.y\n    },\n    [children]\n  )\n  return (\n    <group {...props} scale={[0.1 * size, 0.1 * size, 0.1]}>\n      <mesh ref={mesh}>\n        <textGeometry attach=\"geometry\" args={[children, config]} />\n        <meshNormalMaterial attach=\"material\" />\n      </mesh>\n    </group>\n  )\n}\n\n\nexport const TextWithCannon = ({ children, vAlign = 'center', hAlign = 'center', size = 1, color = '#000000', ...props }: any) => {\n  const { position } = props\n  const font = new THREE.FontLoader().parse(helvetikerRegularFont);\n  const config = useMemo(\n    () => ({ font, size: 40, height: 30, curveSegments: 32, bevelEnabled: true, bevelThickness: 6, bevelSize: 2.5, bevelOffset: 0, bevelSegments: 8 }),\n    [font]\n  )\n  const cannon = useCannon({ mass: 100000 }, (body: any) => {\n    body.addShape(new CANNON.Box(new CANNON.Vec3(1, 1, 1)));\n    body.position.set(...position);\n  });\n  const mesh = useUpdate(\n    (self: any) => {\n      const size = new THREE.Vector3()\n      self.geometry.computeBoundingBox()\n      self.geometry.boundingBox.getSize(size)\n      self.position.x = hAlign === 'center' ? -size.x / 2 : hAlign === 'right' ? 0 : -size.x\n      self.position.y = vAlign === 'center' ? -size.y / 2 : vAlign === 'top' ? 0 : -size.y\n    },\n    [children]\n  )\n  return (\n    <group {...props} scale={[0.1 * size, 0.1 * size, 0.1]}>\n      <mesh ref={cannon}>\n        <mesh ref={mesh}>\n          <textGeometry attach=\"geometry\" args={[children, config]} />\n          <meshNormalMaterial attach=\"material\" />\n        </mesh>\n      </mesh>\n    </group>\n  )\n}","import React from 'react';\nimport * as THREE from 'three';\nimport * as CANNON from 'cannon';\nimport { useCannon } from 'hooks/useCannon';\n\nexport const Plane = (props: any) => {\n  const { position } = props\n  const ref = useCannon({ mass: 0 }, (body: any) => {\n      body.addShape(new CANNON.Plane());\n      body.position.set(...position);\n  });\n  return (\n    <mesh ref={ref} receiveShadow>\n      <planeBufferGeometry attach='geometry' args={[1000, 1000]} />\n      <meshPhongMaterial attach='material' color='#272727' />\n    </mesh>\n  );\n};","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport ReactDOM from 'react-dom'\nimport * as THREE from 'three'\nimport React, { Suspense, useEffect, useRef, useState } from 'react'\nimport { Canvas, useLoader, useFrame } from 'react-three-fiber'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport Text, { TextWithCannon } from 'components/Text'\nimport { useValueRef } from 'hooks/useValue'\nimport * as CANNON from 'cannon';\nimport { useCannon, Provider } from 'hooks/useCannon';\nimport { Plane } from 'components/Plane'\n\nconst theme = css`\n  width: 100vw;\n  height: 100vh;\n  background-color: #272727;\n`;\n\nconst HelloWorld = () => {\n\n  // const [useGravity, setUseGravity] = useState<boolean>(false)\n\n  const ref: any = useRef()\n\n  return (\n    <group ref={ref}>\n      <TextWithCannon hAlign=\"left\" position={[0, 4.2, 0]} children=\"REACT\" />\n      <Text hAlign=\"left\" position={[0, 0, 0]} children=\"THREE\" />\n      <Text hAlign=\"left\" position={[0, -4.2, 0]} children=\"FIBER\" />\n      <Text hAlign=\"left\" position={[12, 0, 0]} children=\"4\" size={3} />\n      <Text hAlign=\"left\" position={[16.5, -4.2, 0]} children=\"X\" />\n    </group>\n  )\n}\n\ntype CanvasWorkProps = {\n  textObjects: string[]\n}\nconst CanvasWork: React.FC<CanvasWorkProps> = (props) => {\n  return (\n    <Canvas camera={{ position: [0, 0, 30] }}>\n      <ambientLight intensity={2} />\n      <pointLight position={[40, 40, 40]} />\n      <Provider>\n        <Suspense fallback={null}>\n          <Plane position={[0, 0, -400]} />\n          {/* <HelloWorld /> */}\n          {\n            props.textObjects.map((text, i) => {\n              const xPos = -20 + 5 * i\n              return (\n                <TextWithCannon\n                  key={i}\n                  hAlign=\"left\"\n                  position={[xPos, 0, 20]}\n                  children={text}\n                />\n              )\n            })\n          }\n        </Suspense>\n      </Provider>\n    </Canvas>\n  )\n}\n\nexport const HelloText = () => {\n\n  const [textObjects, setTextObjects] = useState<string[]>([])\n\n  const createTextObjects = (e: any) => {\n    // const text = e.currentTarget.value\n    // if (text.length < 10) {\n    //   return\n    // }\n    const value = e.currentTarget.value.slice(-1)\n    setTextObjects([...textObjects, value])\n  }\n\n  return (\n    <div css={theme}>\n      <input type=\"text\" onChange={createTextObjects}/>\n      <CanvasWork textObjects={textObjects} />\n    </div>\n  )\n}\n\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core'\nimport * as THREE from 'three'\nimport React, { useEffect, useMemo } from 'react'\nimport { Canvas } from 'react-three-fiber'\nimport helvetikerRegularFont from 'three/examples/fonts/helvetiker_regular.typeface.json'\n// import { useSprings, a } from 'react-spring/three' // Can't find module\nconst  { useSprings, a } = require('react-spring/three')\n\ntype Args = [number, number, number]\n\n// const number = 35\nconst text = \"hello,world!\"\nconst number = text.length\nconst colors = ['#A2CCB6', '#FCEEB5', '#EE786E', '#e0feff', 'lightpink', 'lightblue']\nconst random = (i: number) => {\n  const r = Math.random()\n  return {\n    position: [100 - Math.random() * 500, 100 - Math.random() * 500, 100 - Math.random() * 500] as Args,\n    color: colors[Math.round(Math.random() * (colors.length - 1))],\n    scale: [1 + r * 10, 1 + r * 10, 1] as Args,\n    rotation: [0, 0, THREE.Math.degToRad(Math.round(Math.random()) * 45)] as Args,\n  }\n}\n\nconst data = (new Array(number)).fill(undefined).map((_, i) => {\n  return {\n    color: colors[Math.round(Math.random() * (colors.length - 1))],\n    args: [0.1 + Math.random() * 9, 0.1 + Math.random() * 9, 10] as Args,\n    str: text[i]\n  }\n})\n\nconst Content = () => {\n\n  const font = new THREE.FontLoader().parse(helvetikerRegularFont);\n  const textConfig = useMemo(\n    () => ({ font, size: 40, height: 50, curveSegments: 32, bevelEnabled: true, bevelThickness: 6, bevelSize: 2.5, bevelOffset: 0, bevelSegments: 8 }),\n    [font]\n  )\n\n  const [springs, set] = useSprings(number, (i: number) => ({\n    from: random(i),\n    ...random(i),\n    config: { mass: 10, tension: 150, friction: 50 }\n  }))\n\n  useEffect(() =>\n    void setInterval(() => \n      set(((i: number) => ({ ...random(i), delay: i * 40 })) as any),\n      3000\n    )\n  , [])\n\n  return (\n    <React.Fragment>\n      {\n        data.map((d, index) => {\n          return (\n            <a.mesh key={index} {...springs[index]} castShadow receiveShadow>\n              {/* <boxBufferGeometry attach=\"geometry\" args={d.args} /> */}\n              <textGeometry attach=\"geometry\" args={[d.str, textConfig]} />\n              <a.meshStandardMaterial attach=\"material\" color={springs[index].color} roughness={0.75} metalness={0.5} />\n            </a.mesh>\n          )\n        })\n      }\n    </React.Fragment>\n  )\n}\n\nfunction Lights() {\n  return (\n    <group>\n      <pointLight intensity={0.3} />\n      <ambientLight intensity={2} />\n      <spotLight\n        castShadow\n        intensity={0.2}\n        angle={Math.PI / 7}\n        position={[150, 150, 250]}\n        penumbra={1}\n        shadow-mapSize-width={2048}\n        shadow-mapSize-height={2048}\n      />\n    </group>\n  )\n}\n\nconst theme = css`\n  width: 100%;\n  height: 100vh;\n  background-color: #272727;\n`;\n\nexport const Montage = () => {\n\n  return(\n    <div css={theme}>\n      {/* rotation ref: https://threejs.org/docs/#api/en/math/Euler */}\n      <Canvas shadowMap camera={{ position: [200, 0, 200], rotation: [0, .785, 0], fov: 100 }}>\n        <Lights />\n        <Content />\n      </Canvas>\n    </div>\n  )\n}","import Top from 'components/pages/Top';\nimport NotFound from 'components/pages/NotFound';\nimport { InteractiveCubesOrtho } from 'containers/interactive/InteractiveCubesOrtho';\nimport { InteractiveTextsOrtho } from 'containers/interactive/InteractiveTextsOrtho';\nimport { HelloText } from 'containers/gravity/TextWork01';\nimport { Montage } from 'containers/montage/Montage';\n\nexport const ROUTES = [\n  {\n    path: '/',\n    exact: true,\n    gnavi: true,\n    title: 'Top',\n    category: 'log',\n    component: Top,\n  },\n  {\n    path: '/InteractiveCubesOrtho',\n    exact: true,\n    gnavi: true,\n    title: 'InteractiveCubesOrtho',\n    category: 'faq_log',\n    component: InteractiveCubesOrtho,\n  },\n  {\n    path: '/InteractiveTextsOrtho',\n    exact: true,\n    gnavi: true,\n    title: 'InteractiveTextsOrtho',\n    category: 'faq_log',\n    component: InteractiveTextsOrtho,\n  },\n  {\n    path: '/Montage',\n    exact: true,\n    gnavi: true,\n    title: 'Montage',\n    category: 'faq_log',\n    component: Montage,\n  },\n  {\n    path: '/HelloGravity',\n    exact: true,\n    gnavi: true,\n    title: 'HelloGravity',\n    category: 'faq_log',\n    component: HelloText,\n  },\n  {\n    path: '*',\n    exact: false,\n    gnavi: false,\n    component: NotFound,\n  },\n];\n","import * as THREE from 'three'\nimport React, { useRef, Suspense } from 'react'\nimport { Canvas, useFrame, useLoader } from 'react-three-fiber'\n// import textureUrl from 'https://threejs.org/examples/textures/crate.gif'\n\nfunction Cube() {\n  const mesh = useRef<any>()\n  const texture = useLoader(THREE.TextureLoader, 'https://threejs.org/examples/textures/crate.gif')\n  useFrame(() => {\n    mesh.current.rotation.x += 0.005;\n    mesh.current.rotation.y += 0.01;\n  })\n  return (\n    <mesh ref={mesh}>\n      <boxBufferGeometry attach=\"geometry\" args={[200, 200, 200]} />\n      {/* <meshBasicMaterial attach=\"material\" map={texture} depthTest={false} /> */}\n      <meshBasicMaterial attachArray=\"material\" color=\"#A2CCB6\" />\n      <meshBasicMaterial attachArray=\"material\" color=\"#FCEEB5\" />\n      <meshBasicMaterial attachArray=\"material\" color=\"#EE786E\" />\n      <meshBasicMaterial attachArray=\"material\" color=\"#E0FEFF\" />\n      <meshBasicMaterial attachArray=\"material\" color=\"lightpink\" />\n      <meshBasicMaterial attachArray=\"material\" color=\"lightblue\" />\n    </mesh>\n  )\n}\n\nconst TexturedBox = () => {\n  return (\n    <Canvas camera={{ position: [0, 0, 300] }}>\n      <Suspense fallback={null}>\n        <Cube />\n      </Suspense>\n    </Canvas>\n  )\n}\n\nexport { TexturedBox };","import * as React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { ROUTES } from 'constants/Route';\nimport { TexturedBox } from 'containers/geometry/TexturedBox';\n\n\nconst Sidebar: React.FC = (props) => {\n  const { ...rest } = props;\n  const location = useLocation();\n\n  return (\n    <Wrapper {...rest}>\n      <TitleArea>\n        <TexturedBox />\n        <LogoLink to=\"/\"><Title>THREE</Title></LogoLink>\n      </TitleArea>\n      <Navi>\n        <List>\n          {ROUTES.filter((route) => route.gnavi).map((route) => {\n            let active = 0;\n            if (location.pathname === '/') {\n              active = route.path === '/' ? 1 : 0;\n            } else {\n              active = route.path !== '/' && location.pathname.indexOf(route.path) > -1 ? 1 : 0;\n            }\n            return (\n              <Item key={route.path}>\n                <SidebarLink to={route.path} active={active}>\n                  {route.title}\n                </SidebarLink>\n              </Item>\n            );\n          })}\n        </List>\n      </Navi>\n    </Wrapper>\n  );\n};\n\ninterface SidebarLinkIF {\n  active: number;\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 200px;\n  height: 100vh;\n  background-color: #143d54;\n  box-sizing: border-box;\n`;\n\nconst TitleArea = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  height: 100px;\n  padding: 22px 20px;\n  box-sizing: border-box;\n  &:after {\n    content: '';\n    position: absolute;\n    bottom: 0;\n    left: 18px;\n    width: calc(100% - 36px);\n    height: 1px;\n    background-color: #5a608e;\n  }\n`;\n\nconst LogoLink = styled(Link)`\n  text-decoration: none;\n`\n\nconst Title = styled.h1`\n  color: #ffffff;\n  font-size: 1.8rem;\n  font-weight: bold;\n`;\n\nconst Navi = styled.nav`\n  height: 100%;\n  margin-top: 40px;\n`;\n\nconst List = styled.ul``;\n\nconst Item = styled.li``;\n\nconst SidebarLink = styled(Link)`\n  display: inline-block;\n  width: 100%;\n  padding: 20px;\n  font-size: 0.8rem;\n  font-weight: bold;\n  background-color: ${(props: SidebarLinkIF) => (props.active === 0 ? 'inherit' : '#00253a')};\n  color: ${(props: SidebarLinkIF) => (props.active === 0 ? '#8a8a8a' : '#ffffff')};\n  cursor: ${(props: SidebarLinkIF) => (props.active === 0 ? 'pointer' : 'default')};\n  text-decoration: none;\n  box-sizing: border-box;\n  &:hover {\n    color: #ffffff;\n    background-color: #00253a;\n  }\n`;\n\nexport default Sidebar;\n","/** @jsx jsx */\nimport { css, jsx, Global } from '@emotion/core';\nimport emotionReset from 'emotion-reset';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { ROUTES } from 'constants/Route';\nimport Sidebar from 'components/organisms/Sidebar';\nimport styled from 'styled-components';\nimport Header from 'components/organisms/Header';\n\nconst globalStyles = css`\n    ${emotionReset}\n    *, *::after, *::before {\n        box-sizing: border-box;\n        -moz-osx-font-smoothing: grayscale;\n        -webkit-font-smoothing: antialiased;\n        font-smoothing: antialiased;\n    }\n`;\n\nconst App = () => (\n  <div>\n    <Global styles={globalStyles} />\n    <BrowserRouter>\n      <Wrapper>\n        <Sidebar />\n        <Container>\n          {/* <Header /> */}\n          <Main>\n            <Switch>\n              {ROUTES.map((route) => (\n                <Route key={route.path} exact={route.exact} path={route.path} component={route.component} />\n              ))}\n            </Switch>\n          </Main>\n        </Container>\n      </Wrapper>\n    </BrowserRouter>\n    {/* <Work /> */}\n  </div>\n);\n\nexport default App;\n\nconst Wrapper = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n`;\n\nconst Container = styled.div`\n  width: calc(100% - 200px);\n`;\n\nconst Main = styled.main`\n  width: 100%;\n  height: calc(100% - 40px);\n  box-sizing: border-box;\n`;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}